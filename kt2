#номер 1
'''
input = input()
newarr = ""
for i in range(len(input) -1, -1, -1):
    newarr += input[i]
if input == newarr:
    print("Строка является палиндромом.")
else:
    print("Строка не является палиндромом.")
'''
#номер 2 
''''
number = input("Введите трехзначное число: ")
if len(number) == 3:
    sotni = number[0]  
    tens = number[1]      
    odins = number[2]     
    print(f"Сотни - {sotni}, десятки - {tens}, единицы - {odins}")
else:
    print("Ошибка: Пожалуйста, введите корректное трехзначное число.")
'''
#номер 3  
''''
def task3(a, b):
    return list(set(a) & set(b))
a = [1, 2, 3, 4, 5]
b = [4, 5, 6, 7]
res = task3(a, b)
print(res)
'''
#номер 7
'''
def scrabble(word):
    
    points = {
        1: 'AEIOULNSTR',
        2: 'DG',
        3: 'BCMP',
        4: 'FHVWY',
        5: 'K',
        8: 'JZ',
        10: 'QX'
    }

    score = 0  

    for key in word:
        for point, i in points.items():
            if key in i:
                score += point  

    return score
word = input("Введите слово для подсчета очков в Скрабле: ")
score = scrabble(word)
print(f"Слово '{word}' набирает {score} очков.")
'''
#номер 4
''''
def nomer4(strings):
    max_length = max(len(i) for i in strings)
    return [i + '_' * (max_length - len(i)) for i in strings]

# Пример использования
input_strings = ["apple", "banana", "kiwi", "grapefruit"]
result = nomer4(input_strings)

print(result)  # ['apple_____', 'banana____', 'kiwi_____', 'grapefruit']
'''
#nomer 5 
def nomer4(grades_input):
    grades = list(map(int, grades_input.split(',')))
    
    filtered_grades = []
    skip_next = False 

    for i in range(len(grades)):
        if skip_next:
            skip_next = False
            continue
        
        if grades[i] == 2:
            if i + 1 < len(grades) and grades[i + 1] != 2:
                skip_next = True 
                continue
        
        filtered_grades.append(grades[i])

    if not filtered_grades:
        return 0
    
    average_grade = round(sum(filtered_grades) / len(filtered_grades))
    return average_grade

grades_input = input("Введите оценки через запятую: ")
final_grade = nomer4(grades_input)
print(f"Итоговая оценка за четверть: {final_grade}")
# 6 Реализуйте программу-викторину, в которой пользователь может отвечать на вопросы по различным темам. Создайте список вопросов и ответов, затем используйте циклы и условные операторы для проверки правильности ответа.
"""
def quiz():
    questions = {
        "Как называется столица Франции?": "Париж",
        "Сколько планет в Солнечной системе?": "Восемь",
        "Как называется жидкость, заполняющая глазное яблоко?": "Слеза",
        "Помидор это овощ или ягода?": "Ягода"
    }

    score = 0

    print("Добро пожаловать в викторину! Ответьте на следующие вопросы:\n")

    for question, correct_answer in questions.items():
        user_answer = input(question + " ")
        if user_answer.lower() == correct_answer.lower():
            print("Правильно!")
            score += 1
        else:
            print(f"Неправильно. Правильный ответ: {correct_answer}.\n")
    print(f"\nВы ответили правильно на {score} из {len(questions)} вопросов.")

quiz()
"""
# 8 Напишите программу, которая будет создавать список из двух по следующему примеру: [1, 2, 3] (+) [11, 22, 33] -> [1, 11, 2, 22, 3, 33]
"""
def merge_lists(list1, list2):
    merged_list = []
    min_length = min(len(list1), len(list2))
    
    for i in range(min_length):
        merged_list.append(list1[i])
        merged_list.append(list2[i])
    
    if len(list1) > min_length:
        merged_list.extend(list1[min_length:])
    elif len(list2) > min_length:
        merged_list.extend(list2[min_length:])

    return merged_list

list1 = [1, 2, 3]
list2 = [11, 22, 33]
result = merge_lists(list1, list2)
print(result) 
"""

# 9 Задание 9. Пользвоатель вводит 2 числа - индексы списка. Выведите список, который не содержит элементов по этим индексам.Дан список: [1, 44, 7, 9, 3, 2, 1, 44]Ввод: 0, 4Результат: [44, 7, 9, 2, 1, 44]
"""
def removeElByIndex(original_list, index1, index2):
    indexes = sorted([index1, index2], reverse=True)
    
    for index in indexes:
        del original_list[index]
    
    return original_list

# Исходный список
my_list = [1, 44, 7, 9, 3, 2, 1, 44]

input_index = input("Введите два индекса, разделенные запятой: ")
index1, index2 = map(int, input_index.split(','))
result_list = removeElByIndex(my_list, index1, index2)
print("Результат:", result_list)
"""

# 10 Пользователь вводит число. Вывести количество нулей в конце числа.18534290000 -> 3 ??????????? 6532036235001 -> 0 15 -> 0
"""
def Zeros(number):
    number_str = str(number)
    
    count = 0
    for digit in reversed(number_str): #reversed переворачивает массив 
        if digit == '0':
            count += 1
        else:
            break

    return count

# Запрашиваем ввод числа у пользователя
user_input = input("Введите число: ")
result = Zeros(user_input)

print("Количество нулей в конце числа:", result)
"""

# 11 Дан список. Пользователь вводит число. Вывести ближайшее число к введенному из списка[17, 4, 7, 10, 11, 12], 9 == 10 [17, 4, 7, 10, 11, 12], 8 == 7
"""
def Nearest_Number(arr, target):
    target = int(target)
    nearest = arr[0]
    min_diff = abs(nearest - target) 

    for i in arr:
        diff = abs(i - target)
        if diff < min_diff: 
            min_diff = diff
            nearest = i 
            
    return nearest

arr = [17, 4, 7, 10, 11, 12]
user_inp = input("Введите число: ")
print(Nearest_Number(arr, user_inp))
"""

# 12 Пользователем вводится строка, а затем 2 символа - ограничения. Напечатать в консоль строку, которая находтся между ограничений."What is >apple<", ">", "<" == "apple""[an apple]", "[", "]" == "an apple"
"""
str = input("Введите строку: ")
limitation1 = input("Введите первое ограничение: ")
limitation2 = input("Введите второе ограничение: ")

start_index = str.index(limitation1)
end_index = str.index(limitation2)

print(str[start_index + 1 : end_index])
"""
